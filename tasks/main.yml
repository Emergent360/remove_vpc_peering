---
# tasks file for remove_vpc_peering
- name: set requester ec2_vpc_name
  set_fact: ec2_vpc_name="{{ ec2_name_prefix }}-vpc"

- name: get the VPC info for requester "{{ ec2_vpc_name }}"
  ec2_vpc_net_info:
    filters:
      "tag:Name": "{{ ec2_vpc_name }}"
    region: "{{ ec2_region }}"
  register: vpc_net_info

- name: set ec2_vpc_id for requester "{{ ec2_vpc_name }}"
  set_fact: ec2_vpc_id="{{ (vpc_net_info.vpcs | selectattr('tags.Name','equalto', ec2_vpc_name ) | first).vpc_id }}"

- name: get vpc peering info for for requester "{{ ec2_vpc_name }}"
  ec2_vpc_peering_info:
    region: "{{ ec2_region }}"
    filters:
      requester-vpc-info.vpc-id: "{{ ec2_vpc_id }}"
  register: vpc_peer

- name: set the id for the peering connection
  set_fact: ec2_vpc_peering_id="{{ vpc_peer.result[0].vpc_peering_connection_id }}"

# We need the accepter vpc id because we need to delete the route from it's route table.
# We'll delete the requester route table completely, but the accepter is just a route removal.
- name: set id for the accepter vpc (default)
  set_fact: accepter_vpc_id="{{ vpc_peer.result[0].accepter_vpc_info.vpc_id }}"

- name: get route table info for the accepter vpc (default)
  ec2_vpc_route_table_info:
    region: "{{ ec2_region }}"
    filters:
      vpc-id: "{{ accepter_vpc_id }}"
  register: rtb_info

- name: set route table id for the accepter vpc (default)
  set_fact:
    route_table_id: "{{ rtb_info.route_tables[0].id }}"

- name: Get destination route for vpc_peering_connection
  set_fact: 
    accepter_route: "{{ rtb_info.route_tables[0].routes
      | rejectattr('vpc_peering_connection_id', 'none')
      | map(attribute='destination_cidr_block')
      | list
      | unique
      | first }}"

- name: Reject the peering connection
  ec2_vpc_peer:
    region: "{{ ec2_region }}"
    peering_id: "{{ ec2_vpc_peering_id }}"
    state: reject

- name: Delete route for peering connection
  command: >
    aws ec2 delete-route
    --destination-cidr-block "{{ accepter_route }}"
    --route-table-id "{{ route_table_id }}"

- name: delete a local VPC peering Connection
  ec2_vpc_peer:
    region: "{{ ec2_region }}"
    peering_id: "{{ vpc_peer.result[0].vpc_peering_connection_id }}"
    state: absent
  register: vpc_peer
